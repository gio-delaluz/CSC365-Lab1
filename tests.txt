// CSC 365
// Lab 1-a test suite

// TC-1
// Tests Requirements R3, R4
// short form command name, existing student
// expected output: Bobbie Havir is a Grade 2 student assigned to the class of Gavin Hamer.
S: HAVIR

// TC-2
// Tests Requirements R3, R4
// short form command name, non-existing student
// expected output: <empty line>
S: NEMO

// TC-3
// Tests Requirements R3, R13
// quit command
// expected output: program terminates
Q

// TC-4
// Tests Requirements R3, R5
// existing student
// expected output: Noel Racanello, who takes 
S: Racanello Bus

// TC-5
// Tests Requirements R3, R5
// non-existing student
// expected output: <empty line>
Student: Potato Bus

// TC-6
// Tests Requirements R3, R6
// existing teacher
// expected output: <empty line>
Teacher: Kerbs

// TC-7
// Tests Requirements R3, R6
// non-existing teacher
// expected output: <empty line>
Teacher: Potato

// TC-8
// Tests Requirements R3, R7
// existing-grade with no entries
// expected output: <empty line>
Grade: 0

// TC-9
// Tests Requirements R3, R7
// existing-grade with multiple entries
// expected output: list all students in that given grade
Grade: 3

// TC-10
// Tests Requirements R3, R7
// invalid number
// expected output: prompt the user to try another query
Grade: Potato


// TC-11
// Tests Requirements R3, R8
// existing bus
// expected output: list grade level and classroom number of ALL students on bus 52
B: 52


// TC-12
// Tests Requirements R3, R8
// invalid argument
// expected output: <empty line>
Bus: Potato


// TC-13
// Tests Requirements R3, R9
// lowest student in grade three
// expected output: informtion about the lowest GPA student in grade 3
Grade: 3 Low


// TC-14
// Tests Requirements R3, R9
// highest student in grade three
// expected output: information about the highest GPA in grade 3
Grade: 3 High

// TC-15
// Tests Requirements R3, R9
// invalid high/low argument
// expected output: prompt the user to try another query
Grade: 3 Potato


// TC-16
// Tests Requirements R3, R10
// existing grade and students
// expected output: print the number of students in each grade in ascending order
Average: 6

// TC-17
// Tests Requirements R3, R10
// existing grade with no students
// expected output: <empty line>
Average: 5

// TC-18
// Tests Requirements R3, R11
// invalid high/low argument
// expected output: print the number of students in each grade in ascending order
Info

// TC-19
// Tests Requirement E1
// text file has number of columns other than 8
// expected output: <program immediately exits upon running>

------------------------------------------------------------------------------------
// Lab 1-b test suite

// TC-20
// Tests Requirement R3 NR1
// valid class number
// expected output: list all students in the given classroom
C 107

// TC-21
// Tests Requirement R3 NR1
// invalid class number
// expected output: No student found in Classroom #9999
C 9999

// TC-22
// Tests Requirement R3 NR2
// valid class number
// expected output: Teacher(s) of Classroom #102
C 102 T

// TC-23
// Tests Requirement R3 NR2
// invalid class number
// expected output: No teacher(s) found for Classroom #9999
C 9999 T

// TC-24
// Tests Requirement R3 NR3
// valid grade
// expected output: lists all teachers that teach grade 2
G 2 T

// TC-25
// Tests Requirement R3 NR3
// invalid grade
// expected output: No teacher(s) found for Grade 10
G 77 T

// TC-26
// Tests Requirement R3 NR4
// valid input
// expected output: lists all classrooms in ascending order followed by enrollment  
E

// TC-27
// Tests Requirements R3 NR4
// invalid additional input
// expected output: prompt the user to try another query
E 2

// TC-28
// Test Requirements R3 NR5
// valid avg gpa by teacher
// expected output: list the avg teachers by gpa
Average: Teacher

// TC-29
// Test Requirements R3 NR5
// invalid avg gpa by teacher
// expected output: raise errorCheck()
Average: Teach

// TC-30
// Test Requirements R3 NR5
// valid avg gpa by bus
// expected output: list the avg gpa by bus
Average: Bus

// TC-31
// Test Requirements R3 NR5
// invalid avg gpa by bus
// expected output: raise errorCheck()
Average: Boose